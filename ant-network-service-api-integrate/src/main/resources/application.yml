info:
    component: API Service

server:
    port: ${PORT:3000}

spring:
    application:
        name: api-service
    aop:
        proxyTargetClass: true
    jackson:
        serialization:
            WRITE_DATES_AS_TIMESTAMPS: false
    sleuth:
        sampler:
            percentage: 1.0
    rabbitmq:
        host: localhost
        port: 5672
        username: guest
        password: guest

hystrix:
    threadpool:
        default:
            # Maximum number of concurrent requests when using thread pools (Default: 10)
            coreSize: 100
            # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
            maxQueueSize: -1
            # Queue size rejection threshold (Default: 5)
            queueSizeRejectionThreshold: 5
    command:
        default:
            circuitBreaker:
            sleepWindowInMilliseconds: 30000
            requestVolumeThreshold: 2
        execution:
            isolation:
#               strategy: SEMAPHORE, no thread pool but timeout handling stops to work
                strategy: THREAD
                thread:
                timeoutInMilliseconds: 6000

ribbon:
    ConnectTimeout: 1000
    ReadTimeout: 3000
    maxAutoRetries: 1
    MaxAutoRetriesNextServer: 2

app:
    ConnectTimeout: 1000
    ReadTimeout: 3000

eureka:
    instance:
        leaseRenewalIntervalInSeconds: 3
        metadataMap:
            instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
    client:
        # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
        registryFetchIntervalSeconds: 5
        instanceInfoReplicationIntervalSeconds: 5
        initialInstanceInfoReplicationIntervalSeconds: 5
        fetchRegistry: true
        serviceUrl:
#            defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:password@localhost:8761}/eureka/
            defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://localhost:2001}/eureka/

logging:
    level:
        root: INFO
        com.threeq: DEBUG
        # Set DEBUG level on Hystrix to get an error message when a fallback method is used.
        com.netflix.hystrix: DEBUG