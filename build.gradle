buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
//		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

group = 'ant-network'
version = '0.0.1-SNAPSHOT'
description = "蚂蚁网络"

allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = 1.8


	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}

	configurations {
//	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
//	all*.exclude group: 'io.netty'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.BUILD-SNAPSHOT"
		}
	}

	dependencies {

	}
}

/**
 * 定义项目依赖关系
 * common <--- test <------------
 *    ^		    ^               |
 *    |         |               |
 *	  ---------core <----- <其他业务子工程>
 *
 */
project(':ant-network-test') {
	dependencies {
		compile(
				project(":ant-network-common")
		)
	}
}
project(':ant-network-core') {
	dependencies {
		compile(
				project(":ant-network-common")
		)
		testCompile(
				project(":ant-network-test")
		)
	}
}
configure(subprojects.findAll {
	![
			'ant-network-core',
			'ant-network-common',
			'ant-network-test'
	].contains(it.name)
}) {
	apply plugin: 'docker'

	task buildDocker(type: Docker, dependsOn: build) {
		push = false
		applicationName = jar.baseName
		dockerfile = file('src/main/docker/Dockerfile')
		doFirst {
			copy {
				from jar
				into stageDir
			}
		}
	}

	dependencies {
		compile(
				project(":ant-network-common"),
				project(":ant-network-core")
		)
		testCompile(
				project(":ant-network-test")
		)
	}
}

